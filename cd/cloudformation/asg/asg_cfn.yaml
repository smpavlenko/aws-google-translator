---
AWSTemplateFormatVersion: 2010-09-09

Description: AWS Google Translator Auto Scaling Group and subroutines

Parameters:
  Project:
    Description: Project Name Tag
    Type: String
    Default: AWSGT

  ImageId:
    Description: AMI id
    Type: String

  InstanceType:
    Description: ec2 instance type
    Type: String
    AllowedValues:
     - t2.micro
     - t2.medium
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.micro

  InstanceCount:
    Description: Number of EC2 instances to launch
    Type: Number
    Default: 2

  MinInstancesCount:
    Description: Min number of EC2 instances to launch
    Type: Number
    Default: 2

  MaxInstancesCount:
    Description: Max number of EC2 instances to launch
    Type: Number
    Default: 4

  ScalingOutAdjustment:
    Description: Number of machines to scale-out
    Type: Number
    Default: 1

  ScalingInAdjustment:
    Description: Number of machines to downscale
    Type: Number
    Default: 1

  ScalingPeriod:
    Description: Period of Time to calculate scaling average on (multiples of 60)
    Type: Number
    Default: 600

  ScaleOutThreshold:
    Description: Average CPU Threschold to scale-out when exceeded
    Type: Number
    Default: 70

  ScaleInThreshold:
    Description: Average CPU to scale-in when usage is below
    Type: Number
    Default: 50

Resources:
  NodeRoleAWSGT:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "aws-gt-ec2-node-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        -
          Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
          Action:
            - sts:AssumeRole

  NodeProfileAWSGT:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref NodeRoleAWSGT

  LaunchConfigAWSGT:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      BlockDeviceMappings:
      - DeviceName: "/dev/sdb"
        Ebs:
          VolumeSize: '10'
          VolumeType: 'gp2'
      SecurityGroups:
      - Fn::ImportValue:
          !Sub "AWSGT-ELB-EC2-SecurityGroup"
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref NodeProfileAWSGT
      Metadata:
        AWS::CloudFormation::Init:
          config:
            commands:
              01_apt_update:
                command: 'apt-get update'

  AutoscalingGroupAWSGT:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy:
      ResourceSignal:
        Count: !Ref InstanceCount
        Timeout: PT10M
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: false
    Properties:
      AutoScalingGroupName: "aws-gt-asg"
      Tags:
      - Key: Name
        Value: AWS GT ASG
        PropagateAtLaunch: true
      - Key: Project
        Value: !Ref Project
        PropagateAtLaunch: true
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      LoadBalancerNames:
        - !ImportValue "AWSGT-ELB"
      VPCZoneIdentifier:
        - !ImportValue "AWSGT-PublicSubnet0"
        - !ImportValue "AWSGT-PublicSubnet1"
      LaunchConfigurationName: !Ref LaunchConfigAWSGT
      MinSize: !Ref MinInstancesCount
      MaxSize: !Ref MaxInstancesCount
      DesiredCapacity: !Ref InstanceCount
      MetricsCollection:
        - Granularity: 1Minute
          Metrics:
          - GroupMaxSize
          - GroupMinSize
          - GroupDesiredCapacity
          - GroupInServiceInstances
          - GroupPendingInstances
          - GroupStandbyInstances
          - GroupTerminatingInstances
          - GroupTotalInstances

  ScaleOutPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: SimpleScaling
      Cooldown: 120
      AutoScalingGroupName: !Ref AutoscalingGroupAWSGT
      ScalingAdjustment: !Ref ScalingOutAdjustment

  ScaleInPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: SimpleScaling
      Cooldown: 120
      AutoScalingGroupName: !Ref AutoscalingGroupAWSGT
      ScalingAdjustment: !Ref ScalingInAdjustment

  CPUAlarmOut:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub "Scale-out if the average CPU >= ${ScaleOutThreshold} for ${ScalingPeriod}"
      AlarmActions:
      - Ref: ScaleOutPolicy
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoscalingGroupAWSGT
      Statistic: Average
      Period: !Ref ScalingPeriod
      EvaluationPeriods: '1'
      Threshold: !Ref ScaleOutThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold

  CPUAlarmIn:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub "Scale-in if the average CPU < ${ScaleInThreshold} for ${ScalingPeriod}"
      AlarmActions:
      - Ref: ScaleInPolicy
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoscalingGroupAWSGT
      Statistic: Average
      Period: !Ref ScalingPeriod
      EvaluationPeriods: '1'
      Threshold: !Ref ScaleInThreshold
      ComparisonOperator: LessThanThreshold

Outputs:
  AutoscalingGroupAWSGT:
    Description: AWS GT ASG
    Value: !Ref AutoscalingGroupAWSGT
    Export:
      Name: !Sub "AWSGT-ASG"
